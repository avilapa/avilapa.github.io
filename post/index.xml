<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Víctor Ávila</title>
    <link>https://avilapa.github.io/post/</link>
    <description>Recent content in Posts on Víctor Ávila</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>All rights reserved - 2018</copyright>
    <lastBuildDate>Sun, 27 May 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://avilapa.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Custom Engine: Physically Based Rendering</title>
      <link>https://avilapa.github.io/post/custom-engine-pbr/</link>
      <pubDate>Sun, 27 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://avilapa.github.io/post/custom-engine-pbr/</guid>
      <description>Index  Background Physically Based Rendering  Introduction Physically Based Shading Image Based Lighting Merging  Atmospheric Scattering  Rayleigh Scattering Mie Scattering Phase Functions  References  Background Physically Based Rendering is not a technique, but a collection of graphics techniques aiming to achieve results as close as possible to the physical world. This means that these techniques are highly based on real world physics light behaviour formulas.</description>
    </item>
    
    <item>
      <title>Custom Engine: Postprocessing</title>
      <link>https://avilapa.github.io/post/custom-engine-postprocessing/</link>
      <pubDate>Sun, 27 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://avilapa.github.io/post/custom-engine-postprocessing/</guid>
      <description>Index  Postprocessing Pipeline Postprocessing Effects  SSAO Bloom God Rays  References  Postprocessing Pipeline The goal of the pipeline was to make an API that is really easy to use for the users, and that requieres as little graphics knowledge as possible. The result, is as simple as the following: ref_ptr&amp;lt;Composer&amp;gt; cam_composer = Engine::ref().scene()-&amp;gt;camera()-&amp;gt;composer(); cam_composer-&amp;gt;set_shadow_mapping_enabled(true); cam_composer-&amp;gt;addPostprocessSSAO()-&amp;gt;addPostprocessBloom()-&amp;gt;addPostprocessFXAA();  This API makes some assumptions:
 The user will not create new postprocessing effects, they will just be able to compose the scene and tweak each render passes parameters.</description>
    </item>
    
  </channel>
</rss>