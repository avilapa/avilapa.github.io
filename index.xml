<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Víctor Ávila</title>
    <link>https://avilapa.github.io/</link>
    <description>Recent content on Víctor Ávila</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>All rights reserved - 2018</copyright>
    <lastBuildDate>Fri, 01 Jun 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://avilapa.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Framerate independent physics in UE4</title>
      <link>https://avilapa.github.io/post/framerate-independent-physics-in-ue4/</link>
      <pubDate>Fri, 01 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://avilapa.github.io/post/framerate-independent-physics-in-ue4/</guid>
      <description>If you are building a physics based game/application and you have plans of it running in a wide range of computers, you need to fix your physics timestep. Index  Understanding the problem Solving the problem  Configuring substepping Setting up substepping in code Handling substep physics   Understanding the problem Your game may be running fine at 120 fps in your computer, but lower-end computers out there waiting for your game to come out may not be able to even reach 60 fps.</description>
    </item>
    
    <item>
      <title>Fuel Renegades</title>
      <link>https://avilapa.github.io/fuel-renegades/</link>
      <pubDate>Fri, 01 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://avilapa.github.io/fuel-renegades/</guid>
      <description>TL;DR: just go play it, its free! https://store.steampowered.com/app/878110/Fuel_Renegades/
  Fuel Renegades Fuel Renegades is an epic arcade racing game REAL FREE (no DLC, no loot boxes, just fun), where your brain will produce tons of adrenaline because of the awesome race endings. Play up to four players in the same computer enjoying the polished mechanics that gives you a smooth game feel. This game was developed during my final HND year by Modular Souls, a small group of programming and art students from ESAT Valencia and some composers from Berklee Valencia.</description>
    </item>
    
    <item>
      <title>Custom Engine: Physically Based Rendering</title>
      <link>https://avilapa.github.io/post/custom-engine-pbr/</link>
      <pubDate>Sun, 27 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://avilapa.github.io/post/custom-engine-pbr/</guid>
      <description>Index  Background Physically Based Rendering  Introduction Physically Based Shading Image Based Lighting Merging  Atmospheric Scattering  Rayleigh Scattering Mie Scattering Phase Functions  References  Background Physically Based Rendering is not a technique, but a collection of graphics techniques aiming to achieve results as close as possible to the physical world. This means that these techniques are highly based on real world physics light behaviour formulas.</description>
    </item>
    
    <item>
      <title>Custom OpenGL C&#43;&#43; Engine</title>
      <link>https://avilapa.github.io/render-engine/</link>
      <pubDate>Wed, 30 Aug 2006 03:45:00 +0200</pubDate>
      
      <guid>https://avilapa.github.io/render-engine/</guid>
      <description>The Engine This is an OpenGL and C++ rendering engine I made in my final HND year at ESAT Valencia for the graphics programming subject. Its main features are the following:  Multithreaded agnostical graphics API Component oriented engine Physically Based Rendering techniques:  Material pipeline (PBS, Metallic/Roughness workflow) Image Based Lighting (Radiance and Irradiance environment mapping) Atmospheric Scattering (Rayleigh and Mie Scattering)  GLTF model loading Postprocessing Pipeline:  Screen Space Ambient Occlusion (SSAO) Bloom Light Scattering (God Rays) Shadow Mapping Fast Approximate Anti-Aliasing (FXAA) Lens Distortion (with Grain, Vignette, Color Aberration) Tonemapping and multiple one-pass filters  Procedural generation of infinite voxel worlds UI integration (ImGui) Sound integration (OpenAL) Physics integration (Bullet Physics)  Related blog posts  Custom Engine: Physically Based Rendering The physically based approach used for my custom rendering engine.</description>
    </item>
    
    <item>
      <title>vxr Engine (Open Source)</title>
      <link>https://avilapa.github.io/vxr-engine/</link>
      <pubDate>Wed, 30 Aug 2006 03:45:00 +0200</pubDate>
      
      <guid>https://avilapa.github.io/vxr-engine/</guid>
      <description> The Engine vxr is an open source project that emerged from the desire to build a general purpose rendering tool that I could use to implement anything I was curious about or wanted to learn about. Github page: https://github.com/avilapa/vxr
### [vxr: New beginnings][1]  __[01/09/2018]__ First blog post of the development process of the vxr engine.  Víctor Ávila \ --- Gallery </description>
    </item>
    
    <item>
      <title>vxt Raytracer (Open Source)</title>
      <link>https://avilapa.github.io/vxt-raytracer/</link>
      <pubDate>Wed, 30 Aug 2006 03:45:00 +0200</pubDate>
      
      <guid>https://avilapa.github.io/vxt-raytracer/</guid>
      <description>The Raytracer vxt is a CPU based multithreaded path tracing renderer written in C++, based on the book Ray Tracing the Next Week by Peter Shirley. The purpose of this project is purely academic as this is my first contact with path tracing techniques! So far so fun :^) Features  Multithreaded Tiled Rendering in CPU. Creation of Image Previews in the process. Objects: Sphere, Box, Axis Aligned Plane, Volume, AABB (all capable of being Translated and Rotated).</description>
    </item>
    
    <item>
      <title>About me</title>
      <link>https://avilapa.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://avilapa.github.io/about/</guid>
      <description>I am a spanish graphics programmer working at Rockstar Games in Edinburgh, Scotland. Before that I developed Fuel Renegades (PC, Steam) while studying at ESAT Valencia, and bad_alloc (PS4) while studying at Sheffield Hallam University. During my career I have gained experience developing for PC and the current generation of consoles across multiple disciplines, though I feel most comfortable in graphics and engine programming (I save my programmer art only for game jams).</description>
    </item>
    
    <item>
      <title>Portfolio</title>
      <link>https://avilapa.github.io/portfolio/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://avilapa.github.io/portfolio/</guid>
      <description>You can read a little bit about me first!
   .item-wrapper { width:33%; float: left; } .item { text-align: center; margin:20px; } .desc { text-align: left!important; } .clear { clear: both; }   Fuel Renegades Description: Published PC Racing Multiplayer Game (Steam) (Video)
Tech: UE4, C++
   PBR Game Engine Description: Component Based, Multithreaded... (Video)
Tech: C++, OpenGL
   vxr Rendering Engine Description: Open Source (GitHub) PBR Engine + Final Year Project</description>
    </item>
    
  </channel>
</rss>